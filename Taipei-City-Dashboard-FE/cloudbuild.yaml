steps:
    # Fetch git tags and determine VITE_APP_VERSION
    - name: "gcr.io/cloud-builders/git"
      entrypoint: "bash"
      args:
          - "-c"
          - |
              git fetch --tags
              GIT_TAG=$(git describe --tags --abbrev=0 2>/dev/null)
              if [ -z "$${GIT_TAG}" ]; then
                COMMIT_SHA=$(git rev-parse --short HEAD)
                VITE_APP_VERSION=$COMMIT_SHA
              else
                VITE_APP_VERSION=$${GIT_TAG}
              fi
              echo "VITE_API_URL=$_VITE_API_URL" >> Taipei-City-Dashboard-FE/.env
              echo "VITE_APP_TITLE=$_VITE_APP_TITLE" >> Taipei-City-Dashboard-FE/.env
              echo "VITE_APP_VERSION=$$VITE_APP_VERSION" >> Taipei-City-Dashboard-FE/.env
              echo "VITE_MAPBOXTILE=$_VITE_MAPBOXTILE" >> Taipei-City-Dashboard-FE/.env
              echo "VITE_MAPBOXTOKEN=$_VITE_MAPBOXTOKEN" >> Taipei-City-Dashboard-FE/.env

    # build docker image
    - name: "gcr.io/cloud-builders/docker"
      dir: "Taipei-City-Dashboard-FE"
      args:
          [
              "build",
              "--build-arg",
              "NODE_ENV=test",
              "-t",
              "asia-east1-docker.pkg.dev/tuic-bd2456/tuic/dashboard-fe:$COMMIT_SHA",
              ".",
          ]

    # push image to Artifact Registry
    - name: "gcr.io/cloud-builders/docker"
      args:
          [
              "push",
              "asia-east1-docker.pkg.dev/tuic-bd2456/tuic/dashboard-fe:$COMMIT_SHA",
          ]

    # deploy service to Cloud Run
    - name: "gcr.io/cloud-builders/gcloud"
      args:
          [
              "run",
              "deploy",
              "dashboard-fe",
              "--image",
              "asia-east1-docker.pkg.dev/tuic-bd2456/tuic/dashboard-fe:$COMMIT_SHA",
              "--port",
              "80",
              "--platform",
              "managed",
              "--region",
              "us-central1",
              "--allow-unauthenticated",
          ]
